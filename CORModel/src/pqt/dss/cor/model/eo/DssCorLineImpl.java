package pqt.dss.cor.model.eo;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 31 14:55:44 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssCorLineImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CorLineIdPk,
        CorHeaderIdFk,
        AgentNoFk,
        AgentLevelReason,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        DssCorHeader;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CORLINEIDPK = AttributesEnum.CorLineIdPk.index();
    public static final int CORHEADERIDFK = AttributesEnum.CorHeaderIdFk.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int AGENTLEVELREASON = AttributesEnum.AgentLevelReason.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int DSSCORHEADER = AttributesEnum.DssCorHeader.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssCorLineImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.cor.model.eo.DssCorLine");
    }


    /**
     * Gets the attribute value for CorLineIdPk, using the alias name CorLineIdPk.
     * @return the value of CorLineIdPk
     */
    public Number getCorLineIdPk() {
        return (Number) getAttributeInternal(CORLINEIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CorLineIdPk.
     * @param value value to set the CorLineIdPk
     */
    public void setCorLineIdPk(Number value) {
        setAttributeInternal(CORLINEIDPK, value);
    }

    /**
     * Gets the attribute value for CorHeaderIdFk, using the alias name CorHeaderIdFk.
     * @return the value of CorHeaderIdFk
     */
    public Number getCorHeaderIdFk() {
        return (Number) getAttributeInternal(CORHEADERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CorHeaderIdFk.
     * @param value value to set the CorHeaderIdFk
     */
    public void setCorHeaderIdFk(Number value) {
        setAttributeInternal(CORHEADERIDFK, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for AgentLevelReason, using the alias name AgentLevelReason.
     * @return the value of AgentLevelReason
     */
    public String getAgentLevelReason() {
        return (String) getAttributeInternal(AGENTLEVELREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentLevelReason.
     * @param value value to set the AgentLevelReason
     */
    public void setAgentLevelReason(String value) {
        setAttributeInternal(AGENTLEVELREASON, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * @return the associated entity DssCorHeaderImpl.
     */
    public DssCorHeaderImpl getDssCorHeader() {
        return (DssCorHeaderImpl) getAttributeInternal(DSSCORHEADER);
    }

    /**
     * Sets <code>value</code> as the associated entity DssCorHeaderImpl.
     */
    public void setDssCorHeader(DssCorHeaderImpl value) {
        setAttributeInternal(DSSCORHEADER, value);
    }


    /**
     * @param corLineIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number corLineIdPk) {
        return new Key(new Object[] { corLineIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        Date currentDate = new Date();
        setEnterDate((Date) currentDate.getCurrentDate());
        setLastUpdatedDate((Date) currentDate.getCurrentDate());
        SequenceImpl seq = new SequenceImpl("DSS_COR_LINE_SEQ", getDBTransaction());
        setCorLineIdPk(seq.getSequenceNumber());
        
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExternalContext ectx = fctx.getExternalContext();
        HttpSession userSession = (HttpSession) ectx.getSession(false);
        try {
            setUserIdFk(new Number(userSession.getAttribute("pUserId")));
            setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
        } catch (SQLException ex) {
            setUserIdFk(new Number(0));
            setLastUpdatedBy(new Number(0));
        }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
}

